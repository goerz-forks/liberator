heading:Starting{nbsp}Xulmus[starting]

|startup-options| +

Command-line options can be passed to Xulmus via the -liberator Firefox
option. These are passed as single string argument.
E.g firefox -liberator "\++cmd=\'set exrc' +u=\'tempRcFile' \++noplugin"

|+c| +
||+c={command}||
________________________________________________________________________________
Execute a single Ex command after all initialization has been performed. See
help:initialization[starting.html#Initialization].
________________________________________________________________________________


|\++cmd| +
||\++cmd={command}||
________________________________________________________________________________
Execute a single Ex command before any initialization has been performed. See
help:initialization[starting.html#Initialization].
________________________________________________________________________________


|+u| +
||+u={rcfile}||
________________________________________________________________________________
The file {rcfile} is used for user initialization commands. If {rcfile} is
"NORC" then no startup initialization is performed except for the loading of
plugins, i.e. steps 1. and 2. in
help:initialization[starting.html#Initialization] are skipped. If {rcfile} is
"NONE" then plugin loading is also skipped.
________________________________________________________________________________


|\++noplugin| +
||\++noplugin||
________________________________________________________________________________
Prevents plugin scripts from being loaded at startup. See 'loadplugins'.
________________________________________________________________________________

section:Initialization[initialization,startup]

At startup, Xulmus completes the following tasks in order.

1. Xulmus can perform user initialization commands. When
one of the following is successfully located, it is executed, and no
further locations are tried.

  a. |$XULMUS_INIT|
     _$XULMUS_INIT_ -- May contain a single Ex command (e.g.,
                           "[c]:source {file}[c]").
  b. [a]\~/_xulmusrc[a] -- Windows only. If this file exists, its contents
	are executed and _$MY_XULMUSRC_ set to its path.
  c. [a]\~/.xulmusrc[a] -- If this file exists, its contents are executed.

2. If 'exrc' is set and the +u command-line option was not specified, then any
RC file in the current directory is also sourced.

3. All directories in 'runtimepath' are searched for a "plugin"
subdirectory and all yet unloaded plugins are loaded. For each
plugin directory, all *.\{js,xulmus} files (including those in further
subdirectories) are sourced alphabetically. No plugins will be sourced
if:

  * 'noloadplugins' is set.
  * the \++noplugin command-line option was specified.
  * the +u=NONE command-line option specified set.

Any particular plugin will not be loaded if it has already been loaded (e.g.,
by an earlier [c]:loadplugins[c] command).

The user's ~ (i.e., "home") directory is determined as follows:

* On Unix and Mac, the environment variable  _$HOME_ is used.
* On Windows, Xulmus checks for the existence of _%HOME%_, then
_%USERPROFILE%_, and then _%HOMEDRIVE%%HOMEPATH%_. It uses the first one
it finds.

section:Saving{nbsp}settings[save-settings]

|:mkx| |:mkxulmusrc|
||:mkx[ulmusrc][!] [a][file][a]|| +
________________________________________________________________________________
Write current key mappings and changed options to [a][file][a]. If no
[a][file][a] is specified then _~/.xulmusrc_ is written unless this file
already exists. The special version [c]:mkxulmusrc![c] will overwrite
[a][file][a] if it exists.

Warning: this differs from Vim's behavior which defaults to writing the file
in the current directory.
________________________________________________________________________________

section:Restarting[restarting]

|:res| |:restart| +
||:res[tart]||
________________________________________________________________________________
Force Xulmus to restart. Useful when installing extensions.
________________________________________________________________________________

// vim: set filetype=asciidoc:
