HEADER

|tabs| +

Tabs are used to be able to view many web pages at the same time. Each tab
contains exactly one buffer -- multiple buffers per tab are not supported. As a
result many buffer and tab commands are interchangeable.

section:Listing{nbsp}tabs[listing-tabs]

|B| |:tabs| |:ls| |:files| |:buffers|
||:buffers [a][filter][a]|| +
||B||
________________________________________________________________________________
Show a list of buffers (=tabs) matching [a][filter][a]. Without [a][filter][a]
list all tabs.
________________________________________________________________________________

section:Opening{nbsp}tabs[opening-tabs]

|:tab| +
||:tab {cmd}||
________________________________________________________________________________
Execute {cmd} and tell it to output in a new tab. Works only for commands that
support it, currently:

* [c]:tab help[c]
* [c]:tab prefs[!][c]
* [c]:tab addons[c]
* [c]:tab downloads[c]
________________________________________________________________________________


|:tabd| |:tabduplicate|
||:[count]tab[duplicate]|| +
________________________________________________________________________________
Duplicate the current tab and switch to the duplicate. If [count] is given,
duplicate the tab [count] times.
________________________________________________________________________________

//TODO: should the tab commands be moved back here?
See help::open[browsing.html#opening] for other ways to open new tabs.

section:Changing{nbsp}tabs[changing-tabs]

|gb| +
||[count]gb||
________________________________________________________________________________
Repeat last [c]:buffer[!][c] command. This is useful to quickly jump between
buffers which have a similar URL or title.
________________________________________________________________________________


|gB| +
||[count]gB||
________________________________________________________________________________
Repeat last [c]:buffer[!][c] command in reverse direction. Just like [m]gb[m]
but in the other direction.
________________________________________________________________________________


|gt| +
||[count]gt||
________________________________________________________________________________
Go to the next tab. Cycles to the first tab when the last is selected. +
If [count] is specified go to the [count]th tab.
________________________________________________________________________________

|<C-PageDown>| |<C-Tab>| |<C-n>| +
||[count]<C-n>||
________________________________________________________________________________
Go to the next tab. Cycles to the first tab when the last is selected. +
If [count] is specified go to the [count]th next tab.
________________________________________________________________________________

|<C-PageUp>| |<C-S-Tab>| |<C-p>| |gT| +
||[count]gT||
________________________________________________________________________________
Go to the previous tab. Cycles to the last tab when the first is selected. +
If [count] is specified go to the [count]th previous tab.
________________________________________________________________________________


|<C-6>| |<C-^>| +
||[count]<C-^>||
________________________________________________________________________________
Select the previously selected tab. This provides a quick method of toggling
between two tabs. If [count] is specified, go to the [count]th tab.
________________________________________________________________________________


|b| |:b| |:buffer|
||:[count]b[uffer][!] [a][url|index][a]|| +
||[count]b||
________________________________________________________________________________
Go to the specified buffer from the buffer list. Argument can be either the
buffer index or the full URL. If [count] is given, go to the [count]th buffer.

If argument is neither a full URL nor an index but uniquely identifies a
buffer, it is selected. With [!] the next buffer matching the argument is
selected, even if it cannot be identified uniquely. Use [m]b[m] as a
shortcut to open this prompt.

If argument is [a]\#[a], the alternate buffer will be selected (see [m]<C-^>[m]).

If no argument is given the current buffer remains current.
________________________________________________________________________________


|g^| |g0| |:bf| |:bfirst| |:br| |:brewind| |:tabfir| |:tabfirst| |:tabr| |:tabrewind|
||:tabr[ewind]|| +
||:tabfir[st]|| +
||:br[ewind]|| +
||:bf[irst]|| +
||g0|| +
||g^||
________________________________________________________________________________
Switch to the first tab.
________________________________________________________________________________


|g$| |:bl| |:blast| |:tabl| |:tablast|
||:tabl[ast]|| +
||:bl[ast]|| +
||g$||
________________________________________________________________________________
Switch to the last tab.
________________________________________________________________________________


|:tabde| |:tabdetach| +
||:tabde[tach]||
________________________________________________________________________________
Detach the current tab, and open it in its own window.
________________________________________________________________________________

section:Reordering{nbsp}tabs[reordering-tabs]

|:tabm| |:tabmove|
||:tabm[ove] [a][N][a]|| +
||:tabm[ove][!] [a]+N[a] | [a]-N[a]|| +
________________________________________________________________________________
Move the current tab to a position after tab [a]N[a]. When [a]N[a] is 0, the
current tab is made the first one. Without [a]N[a] the current tab is made the
last one. [a]N[a] can also be prefixed with "+" or "-" to indicate a relative
movement. If [!] is specified the movement wraps around the start or end of the
tab list.
________________________________________________________________________________


|:bn| |:bnext| |:tn| |:tnext| |:tabn| |:tabnext|
||:[count]tabn[ext] [count]|| +
||:[count]tn[ext] [count]|| +
||:[count]bn[ext] [count]|| +
________________________________________________________________________________
Switch to the next or [count]th tab. Cycles to the first tab when the last is
selected and [count] is not specified.
________________________________________________________________________________


|:tabo| |:tabonly|
||:tabo[nly]||
________________________________________________________________________________
Close all other tabs.
________________________________________________________________________________


|:bN| |:bNext| |:bp| |:bprevious| |:tN| |:tNext| |:tabN| |:tabNext| |:tp| |:tprevious| |:tabp| |:tabprevious| +
||:[count]tabp[revious] [count]|| +
||:[count]tp[revious] [count]|| +
||:[count]tabN[ext] [count]|| +
||:[count]bp[revious] [count]|| +
||:[count]bN[ext] [count]|| +
________________________________________________________________________________
Switch to the previous tab or go [count] tabs back. Wraps around from the
first tab to the last tab.
________________________________________________________________________________

section:Closing{nbsp}tabs[closing-tabs]

|d| |:tabc| |:tabclose| |:bun| |:bunload| |:bw| |:bwipeout| |:bd| |:bdelete|
||:[count]bd[elete][!] [a][arg][a]|| +
||[count]d||
________________________________________________________________________________
Delete current buffer (=tab). If [count] is specified then [count] tabs are
removed. Afterwards, the tab to the right of the deleted tab(s) is selected.

When used with [a][arg][a], remove all tabs which contain [a][arg][a] in the
hostname. [!] forces this command to also search for [a][arg][a] in the full
URL and also the title of the tab. Use with care.
________________________________________________________________________________


|D|
||[count]D||
________________________________________________________________________________
Like [m]d[m] but selects the tab to the left of the deleted tab.
________________________________________________________________________________


|u| |:u| |:undo|
||:[count]u[ndo] [a][url][a]|| +
||[count]u||
________________________________________________________________________________
Undo closing of a tab. If a count is given, don't undo the last but the
[count]th last closed tab. With [a][url][a] restores the tab matching the URL.
________________________________________________________________________________


|:undoa| |:undoall| +
||:undoa[ll]||
________________________________________________________________________________
Undo closing of all closed tabs. Firefox stores up to 10 closed tabs, even
after a browser restart.
________________________________________________________________________________


section:Looping{nbsp}over{nbsp}tabs[looping-over-tabs]

|:tabd| |:tabdo| |:bufd| |:bufdo| +
||:tabd[o] {cmd}||
________________________________________________________________________________
Execute {cmd} in each tab. {cmd} is executed in each tab starting with the
first and ending with the last which becomes the current tab.

{cmd} should not alter the tab list state by adding, removing or reordering
tabs.
________________________________________________________________________________

// vim: set filetype=asciidoc:
