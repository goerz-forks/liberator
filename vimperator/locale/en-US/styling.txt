HEADER

|styling| +

Vimperator allows you to style both the browser and any web pages you view. All
styling is specified via CSS. Although you may style any user interface element
via the [c]:style[c] command, most Vimperator elements can be styled with the
[c]:highlight[c] command, for convenience.

|E185| |:colo| |:colorscheme| +
||:colo[rscheme] {name}|| +
________________________________________________________________________________
Load a color scheme. {name} is found by searching the 'runtimepath' for the
first file matching colors/{name}.vimp.

The ColorScheme autocommand is triggered after the color scheme has been
sourced.
________________________________________________________________________________

|:hi| |:highlight| +
||:hi[light] [-append] {group}[{selector}] [{css}]|| +
________________________________________________________________________________
Highlight {group} with {css}. Normally, {css} is checked for
valid syntax before it's applied. Once you're certain it's
valid, [!] will override the check, to speed Vimperator startup.
{selector} can be any valid CSS selector, such as [c]:hover[c], and
if provided will restrict the match to matching elements.

Valid groups are:
`------------------`-----------------------------------
*Bell*             Vimperator's visual bell
*Boolean*          A JavaScript Boolean object
*CompDesc*	   The description column of the completion list
*CompIcon*	   The favicon of a completion row
*CompItem*	   A completion row
*CompLess*	   The indicator shown when completions may be scrolled up
*CompMore*	   The indicator shown when completions may be scrolled down
*CompResult*       The result column of the completion list
*CompTitle*	   Completion row titles
*ErrorMsg*         Error messages
*Filter*           The matching text in a completion list
*FrameIndicator*   The indicator shown when a new frame is selected
*Function*         A JavaScript Function object
*Hint*             A hint indicator. See [c]:help hints[c].
*HintActive*	   The hint element which will be selected on <Enter>
*HintElem*	   The element which a hint refers to.
*HintImage*	   The indicator which floats above hinted images.
*Indicator*
*InfoMsg*          Information messages
*Keyword*          A bookmark keyword for a URL
*LineNr*           The line number of an error
*Message*
*ModeMsg*          The mode indicator in the command line
*MoreMsg*          The indicator that there is more text to view
*NonText*
*Normal*           Normal text in the command line
*Null*             A JavaScript Null object
*Number*           A JavaScript Number object
*Object*           A JavaScript Object
*Question*         A prompt for a decision
*Search*           Highlighted search results in a web page
*StatusLine*       The status bar
*StatusLineBroken* The status bar for a broken web page
*StatusLineSecure* The status bar for a secure web page
*String*           A JavaScript String object
*TabClose*         The close button of a browser tab
*TabIcon*          The icon of a browser tab
*TabIconNumber*    The number of a browser tab, over its icon
*TabNumber*        The number of a browser tab, next to its icon
*TabText*          The text of a browser tab
*Tag*              A bookmark tag for a URL
*Title*            The title of a listing, including [c]:bmarks[c], [c]:jumps[c]
*URL*              A URL
*WarningMsg*       A warning message
-------------------------------------------------------

Every invocation completely replaces the styling of any previous invocation,
unless [-append] (short option: -a) is provided, in which case, {css} is
appended to its current value. If {css} is not provided and [!] is, any
styles matching {group} are listed. If neither {css} nor [!] is provided, the
style for {group} is reset to its default value.
________________________________________________________________________________

|:highlight-clear| +
||:hi[light] clear [{group}[{selector}]]|| +
________________________________________________________________________________
Reset the highlighting for {group} to its default value. If
{group} is not given, reset all highlighting groups.
________________________________________________________________________________


|:sty| |:style| +
||:sty[le][!] [-name={name}] [-append] {filter} [{css}]|| +
________________________________________________________________________________
Add CSS styles to the browser or to web pages. {filter} is a comma
separated list of URLs to match. URLs ending with [c]*[c] are matched as
prefixes, URLs not containing any [c]:[c] or [c]/[c] characters are
matched as domains. If {name} (short option: [c]-n[c]) is provided, any
existing style with the same name is overridden, and the style may later
be deleted using {name}. If -append (short option: [c]-a[c]) is provided
along with [c]-name[c], {css} and {filter} are appended to its current
value.

If {css} isn't provided, matching styles are listed.
________________________________________________________________________________

|:dels| |:delstyle| +
||:dels[tyle] [-name={name}] [-index={index}] [{filter}] [{css}]|| +
________________________________________________________________________________
Delete any matching styles. If {filter} is provided, only matching elements of
the filter are disabled. For instance, a filter [c]mozilla.org[c], given a
style for [c]www.google.com,mozilla.org[c], will result in a style for
[c]www.google.com[c]. The available options are:

 * [c]-name[c]:  The name provided to [c]:style[c] (short option:
                 [c]-n[c])
 * [c]-index[c]: For unnamed styles, the index listed by [c]:style[c]
                 (short option: [c]-i[c])
________________________________________________________________________________

// vim: set filetype=asciidoc:
