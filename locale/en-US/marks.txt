HEADER

|different-marks| |marks| +

Vimperator supports a number of different marks:

- Bookmarks which allow you to mark a web page as one of your favorites for
  easy access.
- QuickMarks allow you to define up to 62 (a-zA-Z0-9) web sites (or group of
  websites) which you really visit most often
- Local marks to store the position with a webpage
- History is also a special type of marks, as Vimperator automatically
  remembers sites which you have visited in the past.

section:Bookmarks[bookmarks]

INTRO TO BE WRITTEN...

|a| |:bma| |:bmark|
||:bm[ark] [-title=title] [-keyword=kw] [-tags=tag1,tag2] [url]|| +
||a||
____________________________________________________________________________
Add a bookmark. +

The following options are interpreted:

- -title="custom title" (short option: -t)
- -tags=comma,separated,tag,list (short option: -T)
- -keyword=keyword (short option: -k)

If you don't add a custom title, either the title of the web page or the URL
is taken as the title. You can omit the optional [url] argument, so just do
:bmark to bookmark the currently loaded web page with a default title and
without any tags.
____________________________________________________________________________


|A| +
||A||
________________________________________________________________________________
Toggle bookmarked state of current URL. Add/remove a bookmark for the current
location, depending if it already is bookmarked or not. In contrast to the
[c]:bmark[c] command, the bookmark is just _starred_ which means it is placed
in the _Unfiled Bookmarks Folder_ instead of the bookmarks menu.
________________________________________________________________________________


|:bma| |:bmark|
||:bma[rk] [-title=title] [-keyword=kw] [-tags=tag1,tag2] [url]|| +
________________________________________________________________________________
Add a bookmark. If you don't add a custom title, either the title of the web page or the URL is taken as the title. +
You can omit the optional [url] argument, so just do [c]:bmark[c] to bookmark the currently loaded web page with a default title and without any tags. +

The following options are interpreted: +
 -title="custom title" +
 -tags=comma,separated,tag,list +
 -keyword=keyword +
________________________________________________________________________________


|:bmarks|
||:bmarks[!] [filter]|| +
________________________________________________________________________________
List or open multiple bookmarks. Open the message window at the bottom of the
screen with all bookmarks which match [filter] either in the title or URL. +
The special version [c]:bmarks![c] works the same as [c]:bmarks[c] except it
opens all the found bookmarks in new tabs.

Filter can also contain the following options: +
-tags=comma,separated,tag,list +
________________________________________________________________________________


|:delbm| |:delbmarks|
||:delbm[arks] [url]|| +
________________________________________________________________________________
Delete a bookmark. Deletes *all* bookmarks which match the [url].
If omitted, [url] defaults to the URL of the current buffer. Use [m]<Tab>[m]
key on a string to complete the URL which you want to delete.

The following options WILL be interpreted in the future:

* [!] a special version to delete ALL bookmarks
________________________________________________________________________________

section:History[history]

TO BE WRITTEN...

|<C-o>| +
||[count]<C-o>||
________________________________________________________________________________
Go to an older position in the jump list. The jump list is just the browser
history for now.
________________________________________________________________________________


|<C-i>| +
||[count]<C-i>||
________________________________________________________________________________
Go to a newer position in the jump list. The jump list is just the browser
history for now.
________________________________________________________________________________


|<M-Left>| |<A-Left>| |H| +
||[count]H||
________________________________________________________________________________
Go back in the browser history. Count is supported: [m]3H[m] goes back 3 steps.
________________________________________________________________________________


|<M-Right>| |<A-Right>| |L| +
||[count]L||
________________________________________________________________________________
Go forward in the browser history. Count is supported: [m]3L[m] goes forward 3 steps.
________________________________________________________________________________


|:ba| |:back|
||:[count]ba[ck][!] [url]|| +
________________________________________________________________________________
Go back in the browser history. Count is supported, [c]:3back[c] goes back 3
pages in the browser history. +
The special version [c]:back![c] goes to the beginning of the browser history.
________________________________________________________________________________


|:fw| |:fo| |:forward|
||:[count]fo[rward][!] [url]|| +
________________________________________________________________________________
Go forward in the browser history. Count is supported, [c]:3forward[c] goes
forward 3 pages in the browser history. The special version [c]:forward![c]
goes to the end of the browser history.
________________________________________________________________________________


|:hs| |:hist| |:history|
||:hist[ory][!] [filter]|| +
________________________________________________________________________________
Show recently visited URLs. Open the message window at the bottom of the
screen with all history items which match [filter] either in the title or URL.
The special version [c]:history![c] works the same as [c]:history[c] except
it opens all the found items in new tabs.
________________________________________________________________________________

section:QuickMarks[quickmarks]

INTRO TO BE WRITTEN...


|go| +
||go\\{a-zA-Z0-9\\}||
________________________________________________________________________________
Jump to a QuickMark in the current tab. Open any QuickMark in the current tab.
You can mark any URLs with [m]M{a-zA-Z0-9}[m]. These QuickMarks are persistent
across browser sessions.
________________________________________________________________________________


|gn| +
||gn\\{a-zA-Z0-9\\}||
________________________________________________________________________________
Jump to a QuickMark in a new tab. Works like [m]go{a-zA-Z0-9}[m] but opens the
QuickMark in a new tab. Whether the new tab is activated or not depends on the
'activate' option. +
Mnemonic: Go in a new tab. [m]gt[m] would make more sense but is already
taken.
________________________________________________________________________________


|M| +
||M\\{a-zA-Z0-9\\}||
________________________________________________________________________________
Add new QuickMark for current URL. You can go to a marked URL in the current
tab with [m]go{a-zA-Z0-9}[m] or in a new tab with [m]gn{a-zA-Z0-9}[m]. These
QuickMarks are persistent across browser sessions.
________________________________________________________________________________


|:delqm| |:delqmarks|
||:delqm[arks] {marks}|| +
||:delqm[arks]!||
________________________________________________________________________________
Delete the specified QuickMarks. QuickMarks are presented as a list.

Examples:

* [c]:delqmarks Aa b p[c] deletes QuickMarks A, a, b and p +
* [c]:delqmarks b-p[c] deletes all QuickMarks in the range b to p +
* [c]:delqmarks![c] deletes all QuickMarks

________________________________________________________________________________


|:qma| |:qmark|
||:qma[rk] {a-zA-Z0-9} [url]|| +
________________________________________________________________________________
Mark a URL with a letter for quick access. You can also mark whole groups like this:  +
[c]:qmark f http://forum1.com, http://forum2.com, imdb some artist[c]
________________________________________________________________________________


|:qmarks|
||:qmarks [arg]||
________________________________________________________________________________
Show all QuickMarks. If [arg] is specified then limit the list to those QuickMarks mentioned.
________________________________________________________________________________

section:Local{nbsp}Marks[localmarks]

Local marks are used to ...
We differentiate between  two types ...

TO BE WRITTEN...

|m| +
||m\\{a-zA-Z\\}||
________________________________________________________________________________
Set mark at the cursor position. Marks a-z are local to the buffer, whereas
A-Z are valid between buffers.
________________________________________________________________________________


|\`| |\'| +
||\'\\{a-zA-Z\\}||
________________________________________________________________________________
Jump to the mark in the current buffer. Marks a-z are local to the buffer,
whereas A-Z are valid between buffers.
________________________________________________________________________________


|:delm| |:delmarks|
||:delm[arks] {marks}|| +
||:delm[arks]!||
________________________________________________________________________________
Delete the specified marks. Marks are presented as a list.

Examples:

* [c]:delmarks Aa b p[c] deletes marks A, a, b and p +
* [c]:delmarks b-p[c] deletes all marks in the range b to p +
* [c]:delmarks![c] deletes all marks for the current buffer

________________________________________________________________________________


|:ma| |:mark|
||:ma[rk] {a-zA-Z}||
________________________________________________________________________________
Mark current location within the web page.
________________________________________________________________________________


|:marks| +
||:marks [arg]||
________________________________________________________________________________
Show all location marks of current web page. If [arg] is specified then limit the list to those marks mentioned.
________________________________________________________________________________

// vim: set syntax=asciidoc:
